Enter name of the input file: seven.pgm
The length of the file is: 364
Buffer Filled 

Token # 2token value string: boolean
Welcome to function header 

Token # 3token value string: function

Token # 4token value string: test

Token # 5token value char: (
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
parser::hashfunction() for  test  Is key  448  With count  test
hashentry::hashentry()  test
hashmap::put_identifier()   test

Token # 6token value char: )

Token # 7token value string: integer
Welcome to function body 
Declaration phase :)
Welcome to parse declaration

Token # 8token value string: x
Welcome to match populate
Calculate key for x
 In parser::hashfunction() Key =  120
parser::hashfunction() for  x  Is key  120  With count  x
Key 120
hashentry::hashentry()  x
hashmap::put_identifier()   x
Populating table

Token # 9token value char: ;
Leaving match populate

Token # 10token value string: integer

Declaration phase :)
Welcome to parse declaration

Token # 11token value string: y
Welcome to match populate
Calculate key for y
 In parser::hashfunction() Key =  121
parser::hashfunction() for  y  Is key  121  With count  y
Key 121
hashentry::hashentry()  y
hashmap::put_identifier()   y
Populating table

Token # 12token value char: ;
Leaving match populate

Token # 13token value string: integer
Declaration phase :)
Welcome to parse declaration

Token # 14token value string: z
Welcome to match populate
Calculate key for z
 In parser::hashfunction() Key =  122
parser::hashfunction() for  z  Is key  122  With count  z
Key 122
hashentry::hashentry()  z
hashmap::put_identifier()   z
Populating table

Token # 15token value char: ;
Leaving match populate

Token # 16token value string: integer
Declaration phase :)
Welcome to parse declaration

Token # 17token value string: tmp
Welcome to match populate
Calculate key for tmp
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  225
 In parser::hashfunction() Key =  337
parser::hashfunction() for  tmp  Is key  337  With count  tmp
Key 337
hashentry::hashentry()  tmp
hashmap::put_identifier()   tmp
Populating table

Token # 18token value char: ;
Leaving match populate

Token # 19token value string: integer
Declaration phase :)
Welcome to parse declaration

Token # 20token value string: function
Function type is: 115

Token # 21token value string: foo
 Function declaration 2 gateway 
Welcome to match populate
Calculate key for foo
 In parser::hashfunction() Key =  102
 In parser::hashfunction() Key =  213
 In parser::hashfunction() Key =  324
parser::hashfunction() for  foo  Is key  324  With count  foo
Key 324
hashentry::hashentry()  foo
hashmap::put_identifier()   foo
Populating table

Token # 22token value char: (
Leaving match populate
New # table inserted in stack with position  1
Pushing table 0
 In parser::hashfunction() Key =  102
 In parser::hashfunction() Key =  213
 In parser::hashfunction() Key =  324
parser::hashfunction() for  foo  Is key  324  With count  foo
Key 324
hashentry::hashentry()  foo
hashmap::put_identifier()   foo

Token # 23token value string: integer
Welcome to parameterlist

Token # 24token value string: x
In parseparameter() x
Not zero 
 In parser::parseparameter() Key =  120
hashentry::hashentry()  x
hashmap::put_identifier()   x
Populating table in parser::parseparameter()

Token # 25token value char: ,

Token # 26token value string: integer
Welcome to parameterlist

Token # 27token value string: y
In parseparameter() y
Not zero 
 In parser::parseparameter() Key =  121
hashentry::hashentry()  y
hashmap::put_identifier()   y
Populating table in parser::parseparameter()

Token # 28token value char: )
Leaving  parameterlist
Leaving  parameterlist

Token # 29token value string: integer
Welcome to function body 
Declaration phase :)
Welcome to parse declaration

Token # 30token value string: cat
Welcome to match populate
Calculate key for cat
 In parser::hashfunction() Key =  99
 In parser::hashfunction() Key =  196
 In parser::hashfunction() Key =  312
parser::hashfunction() for  cat  Is key  312  With count  cat
Key 312
hashentry::hashentry()  cat
hashmap::put_identifier()   cat
Populating table

Token # 31token value char: ;
Leaving match populate

Token # 32token value string: begin

Token # 33token value string: x
Welcome to parse assign 

Token # 34token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  120
parser::hashfunction() for  x  Is key  120  With count  x
Calculated hash is:  120With datatype:  115
Current Data type is:  115

Token # 35token value char: =

Token # 36token value string: x
Welcome to parsefactor
 In parser::hashfunction() Key =  120
parser::hashfunction() for  x  Is key  120  With count  x

Token # 37token value char: +
If flag = 0
   parser::typecheck()    Successful data type match in line:   15  With current_type  115  Factor_type    115
Welcome to term 2 

Token # 38token value int: 4
Welcome to parsefactor
Number factor type is:  115

Token # 39token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   15  With current_type  115  Factor_type    115
Welcome to term 2 

Token # 40token value string: y
Welcome to parse assign 

Token # 41token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  121
parser::hashfunction() for  y  Is key  121  With count  y
Calculated hash is:  121With datatype:  115
Current Data type is:  115

Token # 42token value char: =

Token # 43token value string: y
Welcome to parsefactor
 In parser::hashfunction() Key =  121
parser::hashfunction() for  y  Is key  121  With count  y

Token # 44token value char: -
If flag = 0
   parser::typecheck()    Successful data type match in line:   16  With current_type  115  Factor_type    115
Welcome to term 2 

Token # 45token value int: 10
Welcome to parsefactor
Number factor type is:  115

Token # 46token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   16  With current_type  115  Factor_type    115
Welcome to term 2 

Token # 47token value string: foo
Welcome to parse assign 

Token # 48token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  102
 In parser::hashfunction() Key =  213
 In parser::hashfunction() Key =  324
parser::hashfunction() for  foo  Is key  324  With count  foo
Calculated hash is:  324With datatype:  115
Current Data type is:  115

Token # 49token value char: =

Token # 50token value int: 0
Welcome to parsefactor
Number factor type is:  115

Token # 51token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   17  With current_type  115  Factor_type    115
Welcome to term 2 

Token # 52token value string: end

Token # 53token value string: function

Token # 54token value char: ;
Top table is:  0

Token # 55token value string: begin

Token # 56token value string: x
Welcome to parse assign 

Token # 57token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  120
parser::hashfunction() for  x  Is key  120  With count  x
Calculated hash is:  120With datatype:  115
Current Data type is:  115

Token # 58token value char: =

Token # 59token value int: 5
Welcome to parsefactor
Number factor type is:  115

Token # 60token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   21  With current_type  115  Factor_type    115
Welcome to term 2 

Token # 61token value string: y
Welcome to parse assign 

Token # 62token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  121
parser::hashfunction() for  y  Is key  121  With count  y
Calculated hash is:  121With datatype:  115
Current Data type is:  115

Token # 63token value char: =

Token # 64token value int: 5
Welcome to parsefactor
Number factor type is:  115

Token # 65token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   22  With current_type  115  Factor_type    115
Welcome to term 2 

Token # 66token value string: z
Welcome to parse assign 

Token # 67token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  122
parser::hashfunction() for  z  Is key  122  With count  z
Calculated hash is:  122With datatype:  115
Current Data type is:  115

Token # 68token value char: =

Token # 69token value int: 5
Welcome to parsefactor
Number factor type is:  115

Token # 70token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   23  With current_type  115  Factor_type    115
Welcome to term 2 

Token # 71token value string: tmp
Welcome to parse assign 

Token # 72token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  225
 In parser::hashfunction() Key =  337
parser::hashfunction() for  tmp  Is key  337  With count  tmp
Calculated hash is:  337With datatype:  115
Current Data type is:  115

Token # 73token value char: =

Token # 74token value string: foo
Welcome to parsefactor
 In parser::hashfunction() Key =  102
 In parser::hashfunction() Key =  213
 In parser::hashfunction() Key =  324
parser::hashfunction() for  foo  Is key  324  With count  foo

Token # 75token value char: (
Welcome to funciton call in factor 
 In parser::hashfunction() Key =  102
 In parser::hashfunction() Key =  213
 In parser::hashfunction() Key =  324
parser::hashfunction() for  foo  Is key  324  With count  foo
Function call return type:   115

Token # 76token value string: z
Welcome to argument list
Welcome to parsefactor
 In parser::hashfunction() Key =  122
parser::hashfunction() for  z  Is key  122  With count  z

Token # 77token value char: ,
If flag = 0
Type checking for the arguments
Welcome to term 2 

Token # 78token value string: x
Welcome to argument list
Welcome to parsefactor
 In parser::hashfunction() Key =  120
parser::hashfunction() for  x  Is key  120  With count  x

Token # 79token value char: )
If flag = 0
Type checking for the arguments
Welcome to term 2 

Token # 80token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   25  With current_type  115  Factor_type    115
Welcome to term 2 

Token # 81token value string: tmp
Welcome to parse assign 

Token # 82token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  225
 In parser::hashfunction() Key =  337
parser::hashfunction() for  tmp  Is key  337  With count  tmp
Calculated hash is:  337With datatype:  115
Current Data type is:  115

Token # 83token value char: =

Token # 84token value string: putInt
Welcome to parsefactor
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  418
 In parser::hashfunction() Key =  528
 In parser::hashfunction() Key =  644
parser::hashfunction() for  putInt  Is key  644  With count  putInt

Token # 85token value char: (
Welcome to funciton call in factor 
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  418
 In parser::hashfunction() Key =  528
 In parser::hashfunction() Key =  644
parser::hashfunction() for  putInt  Is key  644  With count  putInt
Function call return type:   -1

Token # 86token value string: x
Welcome to argument list
Welcome to parsefactor
 In parser::hashfunction() Key =  120
parser::hashfunction() for  x  Is key  120  With count  x

Token # 87token value char: )
If flag = 0
Type checking for the arguments
Welcome to term 2 

Token # 88token value char: ;
If flag = 0
Type mismatch in   27   with token115   and -1
Welcome to term 2 

Token # 89token value string: tmp
Welcome to parse assign 

Token # 90token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  225
 In parser::hashfunction() Key =  337
parser::hashfunction() for  tmp  Is key  337  With count  tmp
Calculated hash is:  337With datatype:  115
Current Data type is:  115

Token # 91token value char: =

Token # 92token value string: putInt
Welcome to parsefactor
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  418
 In parser::hashfunction() Key =  528
 In parser::hashfunction() Key =  644
parser::hashfunction() for  putInt  Is key  644  With count  putInt

Token # 93token value char: (
Welcome to funciton call in factor 
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  418
 In parser::hashfunction() Key =  528
 In parser::hashfunction() Key =  644
parser::hashfunction() for  putInt  Is key  644  With count  putInt
Function call return type:   -1

Token # 94token value string: y
Welcome to argument list
Welcome to parsefactor
 In parser::hashfunction() Key =  121
parser::hashfunction() for  y  Is key  121  With count  y

Token # 95token value char: )
If flag = 0
Type checking for the arguments
Welcome to term 2 

Token # 96token value char: ;
If flag = 0
Type mismatch in   28   with token115   and -1
Welcome to term 2 

Token # 97token value string: tmp
Welcome to parse assign 

Token # 98token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  225
 In parser::hashfunction() Key =  337
parser::hashfunction() for  tmp  Is key  337  With count  tmp
Calculated hash is:  337With datatype:  115
Current Data type is:  115

Token # 99token value char: =

Token # 100token value string: putInt
Welcome to parsefactor
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  418
 In parser::hashfunction() Key =  528
 In parser::hashfunction() Key =  644
parser::hashfunction() for  putInt  Is key  644  With count  putInt

Token # 101token value char: (
Welcome to funciton call in factor 
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  418
 In parser::hashfunction() Key =  528
 In parser::hashfunction() Key =  644
parser::hashfunction() for  putInt  Is key  644  With count  putInt
Function call return type:   -1

Token # 102token value string: z
Welcome to argument list
Welcome to parsefactor
 In parser::hashfunction() Key =  122
parser::hashfunction() for  z  Is key  122  With count  z

Token # 103token value char: )
If flag = 0
Type checking for the arguments
Welcome to term 2 

Token # 104token value char: ;
If flag = 0
Type mismatch in   29   with token115   and -1
Welcome to term 2 

Token # 105token value string: test
Welcome to parse assign 

Token # 106token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
parser::hashfunction() for  test  Is key  448  With count  test
Calculated hash is:  448With datatype:  117
Current Data type is:  117

Token # 107token value char: =

Token # 108token value int: 1
Welcome to parsefactor
Number factor type is:  115

Token # 109token value char: <
If flag = 0
Type mismatch in   30   with token117   and 115
Welcome to term 2 

Token # 110token value int: 1
Welcome to parsefactor
Number factor type is:  115

Token # 111token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   30  With current_type  115  Factor_type    115
Welcome to term 2 

Token # 112token value string: end

Token # 113token value string: function

EOF token: ^
Token # 114token value char: ^
Stack is empty
Top table is:  -1
END OF FILE :) 
Back to main() 
 End of parse operations for main function test   With return type:	117
Destructor for tokenizer <<








Enter name of the input file: two.pgm
The length of the file is: 584
Buffer Filled 

Token # 2token value string: boolean
Welcome to function header 

Token # 3token value string: function

Token # 4token value string: test

Token # 5token value char: (
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
parser::hashfunction() for  test  Is key  448  With count  test
hashentry::hashentry()  test
hashmap::put_identifier()   test

Token # 6token value char: )

Token # 7token value string: string
Welcome to function body 
Declaration phase :)
Welcome to parse declaration

Token # 8token value string: a
Welcome to match populate
Calculate key for a
 In parser::hashfunction() Key =  97
parser::hashfunction() for  a  Is key  97  With count  a
Key 97
hashentry::hashentry()  a
hashmap::put_identifier()   a
Populating table

Token # 9token value char: ;
Leaving match populate

Token # 10token value string: integer
Declaration phase :)
Welcome to parse declaration

Token # 11token value string: b
Welcome to match populate
Calculate key for b
 In parser::hashfunction() Key =  98
parser::hashfunction() for  b  Is key  98  With count  b
Key 98
hashentry::hashentry()  b
hashmap::put_identifier()   b
Populating table

Token # 12token value char: ;
Leaving match populate

Token # 13token value string: integer
Declaration phase :)
Welcome to parse declaration

Token # 14token value string: function
Function type is: 115

Token # 15token value string: testone
 Function declaration 2 gateway 
Welcome to match populate
Calculate key for testone
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
 In parser::hashfunction() Key =  559
 In parser::hashfunction() Key =  669
 In parser::hashfunction() Key =  770
parser::hashfunction() for  testone  Is key  770  With count  testone
Key 770
hashentry::hashentry()  testone
hashmap::put_identifier()   testone
Populating table

Token # 16token value char: (
Leaving match populate
New # table inserted in stack with position  1
Pushing table 0
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
 In parser::hashfunction() Key =  559
 In parser::hashfunction() Key =  669
 In parser::hashfunction() Key =  770
parser::hashfunction() for  testone  Is key  770  With count  testone
Key 770
hashentry::hashentry()  testone
hashmap::put_identifier()   testone

Token # 17token value string: string
Welcome to parameterlist

Token # 18token value string: testwe
In parseparameter() testwe
Not zero 
 In parser::parseparameter() Key =  116
 In parser::parseparameter() Key =  217
 In parser::parseparameter() Key =  332
 In parser::parseparameter() Key =  448
 In parser::parseparameter() Key =  567
 In parser::parseparameter() Key =  668
hashentry::hashentry()  testwe
hashmap::put_identifier()   testwe
Populating table in parser::parseparameter()

Token # 19token value char: )
Leaving  parameterlist

Token # 20token value string: string
Welcome to function body 
Declaration phase :)
Welcome to parse declaration

Token # 21token value string: c
Welcome to match populate
Calculate key for c
 In parser::hashfunction() Key =  99
parser::hashfunction() for  c  Is key  99  With count  c
Key 99
hashentry::hashentry()  c
hashmap::put_identifier()   c
Populating table

Token # 22token value char: ;
Leaving match populate

Token # 23token value string: integer
Declaration phase :)
Welcome to parse declaration

Token # 24token value string: d
Welcome to match populate
Calculate key for d
 In parser::hashfunction() Key =  100
parser::hashfunction() for  d  Is key  100  With count  d
Key 100
hashentry::hashentry()  d
hashmap::put_identifier()   d
Populating table

Token # 25token value char: ;
Leaving match populate

Token # 26token value string: begin

Token # 27token value string: c
Welcome to parse assign 

Token # 28token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  99
parser::hashfunction() for  c  Is key  99  With count  c
Calculated hash is:  99With datatype:  118
Current Data type is:  118

Token # 29token value char: =

Token # 30token value char: "
Welcome to parsefactor
String is:  In testone

Token # 31token value char: "

Token # 32token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   9  With current_type  118  Factor_type    118
Welcome to term 2 

Token # 33token value string: d
Welcome to parse assign 

Token # 34token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  100
parser::hashfunction() for  d  Is key  100  With count  d
Calculated hash is:  100With datatype:  115
Current Data type is:  115

Token # 35token value char: =

Token # 36token value string: putString
Welcome to parsefactor
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  428
 In parser::hashfunction() Key =  544
 In parser::hashfunction() Key =  658
 In parser::hashfunction() Key =  763
 In parser::hashfunction() Key =  873
 In parser::hashfunction() Key =  976
parser::hashfunction() for  putString  Is key  976  With count  putString

Token # 37token value char: (
Welcome to funciton call in factor 
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  428
 In parser::hashfunction() Key =  544
 In parser::hashfunction() Key =  658
 In parser::hashfunction() Key =  763
 In parser::hashfunction() Key =  873
 In parser::hashfunction() Key =  976
parser::hashfunction() for  putString  Is key  976  With count  putString
Function call return type:   -1

Token # 38token value string: testwe
Welcome to argument list
Welcome to parsefactor
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
 In parser::hashfunction() Key =  567
 In parser::hashfunction() Key =  668
parser::hashfunction() for  testwe  Is key  668  With count  testwe

Token # 39token value char: )
If flag = 0
Type checking for the arguments
Welcome to term 2 

Token # 40token value char: ;
If flag = 0
Type mismatch in   10   with token115   and -1
Welcome to term 2 

Token # 41token value string: d
Welcome to parse assign 

Token # 42token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  100
parser::hashfunction() for  d  Is key  100  With count  d
Calculated hash is:  100With datatype:  115
Current Data type is:  115

Token # 43token value char: =

Token # 44token value string: putString
Welcome to parsefactor
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  428
 In parser::hashfunction() Key =  544
 In parser::hashfunction() Key =  658
 In parser::hashfunction() Key =  763
 In parser::hashfunction() Key =  873
 In parser::hashfunction() Key =  976
parser::hashfunction() for  putString  Is key  976  With count  putString

Token # 45token value char: (
Welcome to funciton call in factor 
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  428
 In parser::hashfunction() Key =  544
 In parser::hashfunction() Key =  658
 In parser::hashfunction() Key =  763
 In parser::hashfunction() Key =  873
 In parser::hashfunction() Key =  976
parser::hashfunction() for  putString  Is key  976  With count  putString
Function call return type:   -1

Token # 46token value string: c
Welcome to argument list
Welcome to parsefactor
 In parser::hashfunction() Key =  99
parser::hashfunction() for  c  Is key  99  With count  c

Token # 47token value char: )
If flag = 0
Type checking for the arguments
Welcome to term 2 

Token # 48token value char: ;
If flag = 0
Type mismatch in   11   with token115   and -1
Welcome to term 2 

Token # 49token value string: testone
Welcome to parse assign 

Token # 50token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
 In parser::hashfunction() Key =  559
 In parser::hashfunction() Key =  669
 In parser::hashfunction() Key =  770
parser::hashfunction() for  testone  Is key  770  With count  testone
Calculated hash is:  770With datatype:  115
Current Data type is:  115

Token # 51token value char: =

Token # 52token value int: 0
Welcome to parsefactor
Number factor type is:  115

Token # 53token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   12  With current_type  115  Factor_type    115
Welcome to term 2 

Token # 54token value string: end

Token # 55token value string: function

Token # 56token value char: ;
Top table is:  0

Token # 57token value string: integer
Declaration phase :)
Welcome to parse declaration

Token # 58token value string: function
Function type is: 115

Token # 59token value string: testtwo
 Function declaration 2 gateway 
Welcome to match populate
Calculate key for testtwo
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
 In parser::hashfunction() Key =  564
 In parser::hashfunction() Key =  683
 In parser::hashfunction() Key =  794
parser::hashfunction() for  testtwo  Is key  794  With count  testtwo
Key 794
hashentry::hashentry()  testtwo
hashmap::put_identifier()   testtwo
Populating table

Token # 60token value char: (
Leaving match populate
Pushing table 1
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
 In parser::hashfunction() Key =  564
 In parser::hashfunction() Key =  683
 In parser::hashfunction() Key =  794
parser::hashfunction() for  testtwo  Is key  794  With count  testtwo
Key 794
hashentry::hashentry()  testtwo
hashmap::put_identifier()   testtwo

Token # 61token value string: string
Welcome to parameterlist

Token # 62token value string: testme
In parseparameter() testme
Not zero 
 In parser::parseparameter() Key =  116
 In parser::parseparameter() Key =  217
 In parser::parseparameter() Key =  332
 In parser::parseparameter() Key =  448
 In parser::parseparameter() Key =  557
 In parser::parseparameter() Key =  658
hashentry::hashentry()  testme
hashmap::put_identifier()   testme
Populating table in parser::parseparameter()

Token # 63token value char: )
Leaving  parameterlist

Token # 64token value string: integer
Welcome to function body 
Declaration phase :)
Welcome to parse declaration

Token # 65token value string: e
Welcome to match populate
Calculate key for e
 In parser::hashfunction() Key =  101
parser::hashfunction() for  e  Is key  101  With count  e
Key 101
hashentry::hashentry()  e
hashmap::put_identifier()   e
Populating table

Token # 66token value char: ;
Leaving match populate

Token # 67token value string: string
Declaration phase :)
Welcome to parse declaration

Token # 68token value string: f
Welcome to match populate
Calculate key for f
 In parser::hashfunction() Key =  102
parser::hashfunction() for  f  Is key  102  With count  f
Key 102
hashentry::hashentry()  f
hashmap::put_identifier()   f
Populating table

Token # 69token value char: ;
Leaving match populate

Token # 70token value string: begin

Token # 71token value string: f
Welcome to parse assign 

Token # 72token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  102
parser::hashfunction() for  f  Is key  102  With count  f
Calculated hash is:  102With datatype:  118
Current Data type is:  118

Token # 73token value char: =

Token # 74token value char: "
Welcome to parsefactor
String is:  This is made in testtwo

Token # 75token value char: "

Token # 76token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   20  With current_type  118  Factor_type    118
Welcome to term 2 

Token # 77token value string: e
Welcome to parse assign 

Token # 78token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  101
parser::hashfunction() for  e  Is key  101  With count  e
Calculated hash is:  101With datatype:  115
Current Data type is:  115

Token # 79token value char: =

Token # 80token value string: putInt
Welcome to parsefactor
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  418
 In parser::hashfunction() Key =  528
 In parser::hashfunction() Key =  644
parser::hashfunction() for  putInt  Is key  644  With count  putInt

Token # 81token value char: (
Welcome to funciton call in factor 
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  418
 In parser::hashfunction() Key =  528
 In parser::hashfunction() Key =  644
parser::hashfunction() for  putInt  Is key  644  With count  putInt
Function call return type:   -1

Token # 82token value string: e
Welcome to argument list
Welcome to parsefactor
 In parser::hashfunction() Key =  101
parser::hashfunction() for  e  Is key  101  With count  e

Token # 83token value char: )
If flag = 0
Type checking for the arguments
Welcome to term 2 

Token # 84token value char: ;
If flag = 0
Type mismatch in   21   with token115   and -1
Welcome to term 2 

Token # 85token value string: e
Welcome to parse assign 

Token # 86token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  101
parser::hashfunction() for  e  Is key  101  With count  e
Calculated hash is:  101With datatype:  115
Current Data type is:  115

Token # 87token value char: =

Token # 88token value string: putString
Welcome to parsefactor
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  428
 In parser::hashfunction() Key =  544
 In parser::hashfunction() Key =  658
 In parser::hashfunction() Key =  763
 In parser::hashfunction() Key =  873
 In parser::hashfunction() Key =  976
parser::hashfunction() for  putString  Is key  976  With count  putString

Token # 89token value char: (
Welcome to funciton call in factor 
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  428
 In parser::hashfunction() Key =  544
 In parser::hashfunction() Key =  658
 In parser::hashfunction() Key =  763
 In parser::hashfunction() Key =  873
 In parser::hashfunction() Key =  976
parser::hashfunction() for  putString  Is key  976  With count  putString
Function call return type:   -1

Token # 90token value string: testme
Welcome to argument list
Welcome to parsefactor
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
 In parser::hashfunction() Key =  557
 In parser::hashfunction() Key =  658
parser::hashfunction() for  testme  Is key  658  With count  testme

Token # 91token value char: )
If flag = 0
Type checking for the arguments
Welcome to term 2 

Token # 92token value char: ;
If flag = 0
Type mismatch in   22   with token115   and -1
Welcome to term 2 

Token # 93token value string: f
Welcome to parse assign 

Token # 94token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  102
parser::hashfunction() for  f  Is key  102  With count  f
Calculated hash is:  102With datatype:  118
Current Data type is:  118

Token # 95token value char: =

Token # 96token value char: "
Welcome to parsefactor
String is:  This is in testtwo

Token # 97token value char: "

Token # 98token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   23  With current_type  118  Factor_type    118
Welcome to term 2 

Token # 99token value string: e
Welcome to parse assign 

Token # 100token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  101
parser::hashfunction() for  e  Is key  101  With count  e
Calculated hash is:  101With datatype:  115
Current Data type is:  115

Token # 101token value char: =

Token # 102token value string: putString
Welcome to parsefactor
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  428
 In parser::hashfunction() Key =  544
 In parser::hashfunction() Key =  658
 In parser::hashfunction() Key =  763
 In parser::hashfunction() Key =  873
 In parser::hashfunction() Key =  976
parser::hashfunction() for  putString  Is key  976  With count  putString

Token # 103token value char: (
Welcome to funciton call in factor 
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  428
 In parser::hashfunction() Key =  544
 In parser::hashfunction() Key =  658
 In parser::hashfunction() Key =  763
 In parser::hashfunction() Key =  873
 In parser::hashfunction() Key =  976
parser::hashfunction() for  putString  Is key  976  With count  putString
Function call return type:   -1

Token # 104token value string: f
Welcome to argument list
Welcome to parsefactor
 In parser::hashfunction() Key =  102
parser::hashfunction() for  f  Is key  102  With count  f

Token # 105token value char: )
If flag = 0
Type checking for the arguments
Welcome to term 2 

Token # 106token value char: ;
If flag = 0
Type mismatch in   24   with token115   and -1
Welcome to term 2 

Token # 107token value string: testtwo
Welcome to parse assign 

Token # 108token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
 In parser::hashfunction() Key =  564
 In parser::hashfunction() Key =  683
 In parser::hashfunction() Key =  794
parser::hashfunction() for  testtwo  Is key  794  With count  testtwo
Calculated hash is:  794With datatype:  115
Current Data type is:  115

Token # 109token value char: =

Token # 110token value int: 10
Welcome to parsefactor
Number factor type is:  115

Token # 111token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   25  With current_type  115  Factor_type    115
Welcome to term 2 

Token # 112token value string: end

Token # 113token value string: function

Token # 114token value char: ;
Top table is:  0

Token # 115token value string: begin

Token # 116token value string: a
Welcome to parse assign 

Token # 117token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  97
parser::hashfunction() for  a  Is key  97  With count  a
Calculated hash is:  97With datatype:  118
Current Data type is:  118

Token # 118token value char: =

Token # 119token value char: "
Welcome to parsefactor
String is:  Made in main function

Token # 120token value char: "

Token # 121token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   28  With current_type  118  Factor_type    118
Welcome to term 2 

Token # 122token value string: b
Welcome to parse assign 

Token # 123token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  98
parser::hashfunction() for  b  Is key  98  With count  b
Calculated hash is:  98With datatype:  115
Current Data type is:  115

Token # 124token value char: =

Token # 125token value string: testone
Welcome to parsefactor
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
 In parser::hashfunction() Key =  559
 In parser::hashfunction() Key =  669
 In parser::hashfunction() Key =  770
parser::hashfunction() for  testone  Is key  770  With count  testone

Token # 126token value char: (
Welcome to funciton call in factor 
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
 In parser::hashfunction() Key =  559
 In parser::hashfunction() Key =  669
 In parser::hashfunction() Key =  770
parser::hashfunction() for  testone  Is key  770  With count  testone
Function call return type:   115

Token # 127token value char: "
Welcome to argument list
Welcome to parsefactor
String is:  TestMe

Token # 128token value char: "

Token # 129token value char: )
If flag = 0
Type checking for the arguments
Welcome to term 2 

Token # 130token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   29  With current_type  115  Factor_type    115
Welcome to term 2 

Token # 131token value string: b
Welcome to parse assign 

Token # 132token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  98
parser::hashfunction() for  b  Is key  98  With count  b
Calculated hash is:  98With datatype:  115
Current Data type is:  115

Token # 133token value char: =

Token # 134token value string: testtwo
Welcome to parsefactor
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
 In parser::hashfunction() Key =  564
 In parser::hashfunction() Key =  683
 In parser::hashfunction() Key =  794
parser::hashfunction() for  testtwo  Is key  794  With count  testtwo

Token # 135token value char: (
Welcome to funciton call in factor 
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
 In parser::hashfunction() Key =  564
 In parser::hashfunction() Key =  683
 In parser::hashfunction() Key =  794
parser::hashfunction() for  testtwo  Is key  794  With count  testtwo
Function call return type:   115

Token # 136token value string: a
Welcome to argument list
Welcome to parsefactor
 In parser::hashfunction() Key =  97
parser::hashfunction() for  a  Is key  97  With count  a

Token # 137token value char: )
If flag = 0
Type checking for the arguments
Welcome to term 2 

Token # 138token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   30  With current_type  115  Factor_type    115
Welcome to term 2 

Token # 139token value string: b
Welcome to parse assign 

Token # 140token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  98
parser::hashfunction() for  b  Is key  98  With count  b
Calculated hash is:  98With datatype:  115
Current Data type is:  115

Token # 141token value char: =

Token # 142token value string: putInt
Welcome to parsefactor
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  418
 In parser::hashfunction() Key =  528
 In parser::hashfunction() Key =  644
parser::hashfunction() for  putInt  Is key  644  With count  putInt

Token # 143token value char: (
Welcome to funciton call in factor 
 In parser::hashfunction() Key =  112
 In parser::hashfunction() Key =  229
 In parser::hashfunction() Key =  345
 In parser::hashfunction() Key =  418
 In parser::hashfunction() Key =  528
 In parser::hashfunction() Key =  644
parser::hashfunction() for  putInt  Is key  644  With count  putInt
Function call return type:   -1

Token # 144token value string: b
Welcome to argument list
Welcome to parsefactor
 In parser::hashfunction() Key =  98
parser::hashfunction() for  b  Is key  98  With count  b

Token # 145token value char: )
If flag = 0
Type checking for the arguments
Welcome to term 2 

Token # 146token value char: ;
If flag = 0
Type mismatch in   31   with token115   and -1
Welcome to term 2 

Token # 147token value string: test
Welcome to parse assign 

Token # 148token value char: :
Hash about to be calculated
 In parser::hashfunction() Key =  116
 In parser::hashfunction() Key =  217
 In parser::hashfunction() Key =  332
 In parser::hashfunction() Key =  448
parser::hashfunction() for  test  Is key  448  With count  test
Calculated hash is:  448With datatype:  117
Current Data type is:  117

Token # 149token value char: =

Token # 150token value int: 0
Welcome to parsefactor
Number factor type is:  115

Token # 151token value string: ==
If flag = 0
Type mismatch in   32   with token117   and 115
Welcome to term 2 

Token # 152token value int: 0
Welcome to parsefactor
Number factor type is:  115

Token # 153token value char: ;
If flag = 0
   parser::typecheck()    Successful data type match in line:   32  With current_type  115  Factor_type    115
Welcome to term 2 

Token # 154token value string: end

Token # 155token value string: function

EOF token: ^
Token # 156token value char: ^
Stack is empty
Top table is:  -1
END OF FILE :) 
Back to main() 
 End of parse operations for main function test   With return type:	117
Destructor for tokenizer <<

